configuration = resource

panel 'General Settings' do

  attributes_table_for configuration do

    row :id

    if configuration.instance_of?(GalleryConfiguration)
      row :user do
        if current_user.admin?
          link_to configuration.user, admin_user_path(configuration.user)
        else
          configuration.user
        end
      end
    else
      row :participant do
        link_to configuration.participant, admin_participant_path(configuration.participant)
      end
    end

    row :name
    row :title
    row :description

    bool_row :enabled
    bool_row('Is Practice Configuration') { configuration.is_practice }
    row('Order') { configuration.position }

    row :days_of_week do
      configuration.days_of_week.values.map{|x| x.capitalize}.to_sentence(last_word_connector: ' & ')
    end
  end
end

panel 'Image Set' do
  attributes_table_for configuration do
    row('Image set') { configuration.image_set }
    bool_row :loop_animations
    row :animation_frame_rate
  end
end

if configuration.use_staircase_method
  panel 'Staircase Method Parameters' do
    attributes_table_for configuration do
      row :number_of_staircases
      row :start_level
      row :number_of_reversals
      row('Floor/ceiling hits to finish') { configuration.hits_to_finish }
      row :minimum_level
      row :maximum_level
      row('∆ values') { configuration.delta_values }
      row('# wrong to get easier') { configuration.num_wrong_to_get_easier }
      row('# correct to get harder') { configuration.num_correct_to_get_harder }
    end
  end
else
  panel 'Method of Constant Stimuli (MOCS) Parameters' do
    attributes_table_for configuration do
      row('# questions per folder') { configuration.questions_per_folder }
    end
  end
end

def colour_block(colour)
  span(style: 'background-color: ' + colour + '; width: 50px; height: 20px; display: inline-block; vertical-align: middle')
  span '(' + colour + ')'
end

def two_colours(object, prefix, first_name, first_suffix, second_name, second_suffix)
  div do
    span first_name + ':'
    colour_block object.send(prefix.to_s + '_' + first_suffix.to_s)
  end
  div style: 'margin-top: 10px' do
    span second_name + ':'
    colour_block object.send(prefix.to_s + '_' + second_suffix.to_s)
  end
end

def xywh(object, prefix)
  '(X: ' + object.send(prefix.to_s + '_x').to_s + 'px, ' +
      'Y: ' + object.send(prefix.to_s + '_y').to_s + 'px), ' +
      '(W: ' + object.send(prefix.to_s + '_w').to_s + 'px, ' +
      'H: ' + object.send(prefix.to_s + '_h').to_s + 'px)'
end

panel 'Display Configuration' do
  attributes_table_for configuration do
    row :background_colour do
      colour_block configuration.background_colour
    end
    bool_row :show_exit_button
    if configuration.show_exit_button
      row :exit_button_position do
        xywh configuration, :exit_button
      end
      row :exit_button_colour do
        two_colours configuration, :exit_button, 'Background', :bg, 'Cross colour', :fg
      end
    end
  end
end

panel 'Button Configuration' do
  attributes_table_for configuration do
    row('Number of buttons') { configuration.num_buttons }

    row('Button 1 text') { configuration.button1_text }
    row('Button 2 text') { configuration.button2_text } if configuration.num_buttons.to_i >= 2
    row('Button 3 text') { configuration.button3_text } if configuration.num_buttons.to_i >= 3
    row('Button 4 text') { configuration.button4_text } if configuration.num_buttons.to_i >= 4

    row :button_presentation_delay

    row 'Button 1 colour' do
      two_colours configuration, :button1, 'Background', :bg, 'Text colour', :fg
    end

    if configuration.num_buttons.to_i >= 2
      row 'Button 2 colour' do
        two_colours configuration, :button2, 'Background', :bg, 'Text colour', :fg
      end
    end

    if configuration.num_buttons.to_i >= 3
      row 'Button 3 colour' do
        two_colours configuration, :button3, 'Background', :bg, 'Text colour', :fg
      end
    end

    if configuration.num_buttons.to_i >= 4
      row 'Button 4 colour' do
        two_colours configuration, :button4, 'Background', :bg, 'Text colour', :fg
      end
    end

    row 'Button 1 position' do
      xywh configuration, :button1
    end

    if configuration.num_buttons.to_i >= 2
      row 'Button 2 position' do
        xywh configuration, :button2
      end
    end

    if configuration.num_buttons.to_i >= 3
      row 'Button 3 position' do
        xywh configuration, :button3
      end
    end

    if configuration.num_buttons.to_i >= 4
      row 'Button 4 position' do
        xywh configuration, :button4
      end
    end
  end
end

panel 'General Test Parameters' do
  attributes_table_for configuration do
    bool_row('[next] button after each response') { configuration.require_next }
    row 'Time between each question' do
      configuration.time_between_question_mean.to_s + ' ± ' + configuration.time_between_question_plusminus.to_s + ' s'
    end
    bool_row :infinite_presentation_time

    unless configuration.infinite_presentation_time
      row :finite_presentation_time do
        configuration.finite_presentation_time.to_s + ' s'
      end
    end

    bool_row :infinite_response_window

    unless configuration.infinite_response_window
      row :finite_response_window do
        configuration.finite_response_window.to_s + ' s'
      end
    end

    bool_row :use_specified_seed
    row :specified_seed if configuration.use_specified_seed

    bool_row :attempt_facial_recognition
  end
end

panel 'Timestamps' do
  attributes_table_for configuration do
    row :created_at
    row :updated_at
  end
end

active_admin_comments_for(resource)